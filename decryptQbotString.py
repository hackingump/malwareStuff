import sys

CRYPTO_BLOB1 = 0xA740
CRYPTO_BLOB1_SZ = 0x347C
CRYPTO_BLOB2 = 0xED20


def decryptString(const, fileData):
    """Decrypt a string."""
    i = 0
    andVal = 0x3f
    decryptedStr = ""
    strLen = 0x0
    pos = const
    # first xor loop
    while pos < 0x347b:
        # and constant, andVal = x
        x = pos & andVal
        # mov edx, CRYPTO_BLOB2 + x
        y = fileData[CRYPTO_BLOB2 + x]
        # xor edx, CRYPTO_BLOB1 + i
        z = y ^ fileData[CRYPTO_BLOB1 + pos]
        if z == 0:
            strLen = pos - const
            print(f"Zero reached after {hex(strLen)} iterations")
            print(f"String length = {hex(strLen)}")
            break
        pos += 1
    # now the real decryption
    i = 0
    pos = const + i
    # start grabbing at const offset
    while i < strLen:
        # print(f"Iteration = {i}")
        x = (pos & andVal)
        # print(f"AndValue = {hex(x)}")
        crypto2Val = fileData[CRYPTO_BLOB2 + x]
        # print(f"Crypto Byte = {hex(crypto2Val)}")
        decryptChar = crypto2Val ^ fileData[CRYPTO_BLOB1 + pos]
        i += 1
        pos += 1
        decryptedStr += chr(decryptChar)
        # print(f"{'-' * 64}")
    print(f"Decrypted string = {decryptedStr}")
    return decryptedStr

def main():
    """Main."""
    testConst = 0x596
    fileData = open(sys.argv[1], "rb").read()
    string = decryptString(testConst, fileData)


if __name__ == '__main__':
    main()
